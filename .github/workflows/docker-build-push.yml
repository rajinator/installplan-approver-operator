name: Build and Push Container Image

# Build strategy:
# - Pull requests & main branch pushes: Build AMD64 only (fast, ~5 min)
# - Release tags (v*): Build multi-arch AMD64 + ARM64 (slow, ~15-20 min)
# - Documentation-only changes: Skipped (saves CI/CD minutes)
# - Tags always trigger builds (releases need images regardless of what changed)
# This saves GitHub Actions minutes while ensuring releases support all architectures.

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'CHANGELOG.md'
      - 'QUICKSTART.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'CHANGELOG.md'
      - 'QUICKSTART.md'
      - 'LICENSE'
      - '.gitignore'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Determine platforms to build
        id: platforms
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "platforms=linux/amd64,linux/arm64" >> $GITHUB_OUTPUT
            echo "Building multi-arch (amd64, arm64) for release tag"
          else
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
            echo "Building amd64 only for development"
          fi
      
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # For tags: v1.2.3 -> 1.2.3, 1.2, 1, latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # For main branch: latest
            type=raw,value=latest,enable={{is_default_branch}}
            # For main branch: edge with short SHA
            type=edge,branch=main
            type=edge,branch=master
            # For PRs: pr-123
            type=ref,event=pr
            # SHA for non-release builds only (branch name + SHA)
            type=sha,prefix={{branch}}-,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
      
      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ steps.platforms.outputs.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
      
      # Attestation temporarily disabled - requires repository attestation settings
      # Uncomment when repository supports attestations:
      # - name: Generate artifact attestation
      #   if: github.event_name != 'pull_request'
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      #     subject-digest: ${{ steps.build.outputs.digest }}
      #     push-to-registry: true

